---
// Interactive Statistics Component
---

<section class="py-16 md:py-24 bg-white">
  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Section Header -->
    <div class="text-center mb-16">
      <h2 class="text-3xl md:text-4xl lg:text-5xl font-display font-bold text-gray-900 mb-6">
        Resultados que <span class="text-primary-600">hablan por sí solos</span>
      </h2>
      <p class="text-lg md:text-xl text-gray-600 max-w-3xl mx-auto">
        Más de 17 años dedicada a transformar vidas a través de la comunicación
      </p>
    </div>

    <!-- Stats Grid -->
    <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
      
      <!-- Stat 1: Years of Experience -->
      <div class="stat-card bg-gradient-to-br from-blue-50 to-primary-50 rounded-2xl p-8 text-center hover:shadow-xl transition-all duration-300">
        <div class="w-16 h-16 bg-primary-600 rounded-full flex items-center justify-center mx-auto mb-4">
          <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd"/>
          </svg>
        </div>
        <div class="stat-number text-4xl font-bold text-primary-600 mb-2" data-target="17">0</div>
        <div class="text-lg font-semibold text-gray-900 mb-2">Años de Experiencia</div>
        <div class="text-sm text-gray-600">Dedicación profesional continua</div>
      </div>

      <!-- Stat 2: Patients Helped -->
      <div class="stat-card bg-gradient-to-br from-green-50 to-secondary-50 rounded-2xl p-8 text-center hover:shadow-xl transition-all duration-300">
        <div class="w-16 h-16 bg-secondary-600 rounded-full flex items-center justify-center mx-auto mb-4">
          <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 20 20">
            <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>
        </div>
        <div class="stat-number text-4xl font-bold text-secondary-600 mb-2" data-target="500">0</div>
        <div class="text-lg font-semibold text-gray-900 mb-2">Pacientes Atendidos</div>
        <div class="text-sm text-gray-600">Vidas transformadas</div>
      </div>

      <!-- Stat 3: Success Rate -->
      <div class="stat-card bg-gradient-to-br from-yellow-50 to-orange-50 rounded-2xl p-8 text-center hover:shadow-xl transition-all duration-300">
        <div class="w-16 h-16 bg-orange-500 rounded-full flex items-center justify-center mx-auto mb-4">
          <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 20 20">
            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
          </svg>
        </div>
        <div class="stat-number text-4xl font-bold text-orange-500 mb-2" data-target="95">0</div>
        <div class="text-lg font-semibold text-gray-900 mb-2">% Éxito</div>
        <div class="text-sm text-gray-600">Mejoras significativas</div>
      </div>

      <!-- Stat 4: Session Hours -->
      <div class="stat-card bg-gradient-to-br from-purple-50 to-pink-50 rounded-2xl p-8 text-center hover:shadow-xl transition-all duration-300">
        <div class="w-16 h-16 bg-purple-600 rounded-full flex items-center justify-center mx-auto mb-4">
          <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z" clip-rule="evenodd"/>
          </svg>
        </div>
        <div class="stat-number text-4xl font-bold text-purple-600 mb-2" data-target="8000">0</div>
        <div class="text-lg font-semibold text-gray-900 mb-2">Horas de Terapia</div>
        <div class="text-sm text-gray-600">Dedicación y cuidado</div>
      </div>
    </div>

    <!-- Achievement Badges -->
    <div class="mt-16">
      <h3 class="text-2xl font-display font-bold text-center text-gray-900 mb-8">
        Certificaciones y Especialidades
      </h3>
      <div class="flex flex-wrap justify-center gap-4">
        <div class="achievement-badge bg-white border-2 border-primary-200 rounded-full px-6 py-3 flex items-center space-x-2 hover:border-primary-400 transition-colors duration-300">
          <div class="w-8 h-8 bg-primary-100 rounded-full flex items-center justify-center">
            <svg class="w-4 h-4 text-primary-600" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"/>
            </svg>
          </div>
          <span class="font-medium text-gray-900">Terapia Miofuncional</span>
        </div>
        
        <div class="achievement-badge bg-white border-2 border-secondary-200 rounded-full px-6 py-3 flex items-center space-x-2 hover:border-secondary-400 transition-colors duration-300">
          <div class="w-8 h-8 bg-secondary-100 rounded-full flex items-center justify-center">
            <svg class="w-4 h-4 text-secondary-600" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
            </svg>
          </div>
          <span class="font-medium text-gray-900">Disfagia Adultos</span>
        </div>
        
        <div class="achievement-badge bg-white border-2 border-orange-200 rounded-full px-6 py-3 flex items-center space-x-2 hover:border-orange-400 transition-colors duration-300">
          <div class="w-8 h-8 bg-orange-100 rounded-full flex items-center justify-center">
            <svg class="w-4 h-4 text-orange-600" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z" clip-rule="evenodd"/>
            </svg>
          </div>
          <span class="font-medium text-gray-900">Deglución Infantil</span>
        </div>
        
        <div class="achievement-badge bg-white border-2 border-purple-200 rounded-full px-6 py-3 flex items-center space-x-2 hover:border-purple-400 transition-colors duration-300">
          <div class="w-8 h-8 bg-purple-100 rounded-full flex items-center justify-center">
            <svg class="w-4 h-4 text-purple-600" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M9.383 3.076A1 1 0 0110 4v12a1 1 0 01-1.707.707L4.586 13H2a1 1 0 01-1-1V8a1 1 0 011-1h2.586l3.707-3.707a1 1 0 011.09-.217zM15.657 6.343a1 1 0 011.414 0A9.972 9.972 0 0119 12a9.972 9.972 0 01-1.929 5.657 1 1 0 11-1.414-1.414A7.971 7.971 0 0017 12c0-1.607-.475-3.1-1.293-4.343a1 1 0 010-1.414z" clip-rule="evenodd"/>
              <path fill-rule="evenodd" d="M13.243 8.757a1 1 0 011.414 0A5.978 5.978 0 0116 12a5.978 5.978 0 01-1.343 3.243 1 1 0 11-1.414-1.414A3.99 3.99 0 0014 12c0-.738-.204-1.427-.557-2.029a1 1 0 010-1.414z" clip-rule="evenodd"/>
            </svg>
          </div>
          <span class="font-medium text-gray-900">Entrenamiento Vocal</span>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .stat-card {
    transform: translateY(0);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .stat-card:hover {
    transform: translateY(-8px);
  }
  
  .stat-number {
    transition: all 0.3s ease;
  }
  
  .achievement-badge {
    transition: all 0.3s ease;
  }
  
  .achievement-badge:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  }
  
  @media (max-width: 768px) {
    .stat-card {
      margin-bottom: 1rem;
    }
  }
</style>

<script>
  class StatsCounter {
    constructor() {
      this.counters = [];
      this.hasAnimated = false;
      this.init();
    }
    
    init() {
      this.setupIntersectionObserver();
      this.setupCounters();
    }
    
    setupCounters() {
      const numberElements = document.querySelectorAll('.stat-number');
      
      numberElements.forEach(element => {
        const target = parseInt(element.getAttribute('data-target'));
        this.counters.push({
          element,
          target,
          current: 0
        });
      });
    }
    
    setupIntersectionObserver() {
      const options = {
        threshold: 0.5,
        rootMargin: '0px 0px -100px 0px'
      };
      
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting && !this.hasAnimated) {
            this.animateCounters();
            this.hasAnimated = true;
          }
        });
      }, options);
      
      const statsSection = document.querySelector('.stat-card');
      if (statsSection) {
        observer.observe(statsSection);
      }
    }
    
    animateCounters() {
      const duration = 2000; // 2 seconds
      const fps = 60;
      const totalFrames = (duration / 1000) * fps;
      
      let frame = 0;
      
      const animate = () => {
        frame++;
        const progress = Math.min(frame / totalFrames, 1);
        
        // Easing function (ease-out)
        const easeOut = 1 - Math.pow(1 - progress, 3);
        
        this.counters.forEach(counter => {
          const current = Math.floor(counter.target * easeOut);
          counter.element.textContent = current.toLocaleString();
          
          // Add + symbol for percentage
          if (counter.target === 95) {
            counter.element.textContent = current + '%';
          }
          // Add + symbol for large numbers
          if (counter.target >= 500) {
            counter.element.textContent = current.toLocaleString() + '+';
          }
        });
        
        if (progress < 1) {
          requestAnimationFrame(animate);
        }
      };
      
      requestAnimationFrame(animate);
    }
  }
  
  // Initialize stats counter when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
      new StatsCounter();
    });
  } else {
    new StatsCounter();
  }
</script>